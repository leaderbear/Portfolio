import java.io.File;
import java.io.IOException;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws IOException {

        String options = null;
        Scanner scan = new Scanner(System.in);
        do {

            printMenu();

            options = scan.nextLine();
            System.out.println("Your choosed option : " + options +" , let's run it:");

            switch (options) {
                case "J" :
                case "j" :
                case "jls":
                case "Jls":
                    System.out.println("Jls starting ...\n");
                    System.out.println("Entrez un chemin valide du dossier souhaité:");
                    System.out.println("Enter a valid path to the desired folder:");
                    System.out.println("    Exemple: C:\\Users\\leade\\Desktop\\IFT3913-TP1\\ckjm-master\\src");

                    String pathJls = scan.nextLine();
                    try{
                        JavaFiles javaFiles = new JavaFiles(0);
                        javaFiles.jls(pathJls);
                        javaFiles.writeDataToCsv("jls_result.csv", true);
                    }
                    catch (Exception e){
                        System.out.println("Path : {" + pathJls + "} is incorrect.");
                        //e.printStackTrace();
                    }
                    break;


                case "N":
                case "n":
                case "nvloc":
                case "Nvloc":
                    System.out.println("Nvloc starting ...\n");
                    System.out.println("Entrez un chemin valide du fichier java souhaité:");
                    System.out.println("Enter a valid path to the desired java file:");
                    System.out.println("    Exemple : C:\\Users\\leade\\Desktop\\IFT3913-TP1\\ckjm-master\\src\\gr\\spinellis\\ckjm\\ClassVisitor.java");

                    String pathNvloc = scan.nextLine();
                    try{
                        JavaFile javaFile = new JavaFile(pathNvloc, "", "", -1, -1);
                        System.out.println("Nvloc for " + pathNvloc + " is : " + javaFile.nvloc());

                    }
                    catch (Exception e){
                        System.out.println("Path : {" + pathNvloc + "} is incorrect.");
                        //e.printStackTrace();
                    }

                    break;


                case "I":
                case "i":
                case "icsec":
                case "Icsec":

                    System.out.println("Icsec starting ...\n");
                    System.out.println("Entrez un chemin valide du fichier CSV souhaité: (Généré par Jls)");
                    System.out.println("Enter a valid path to the desired CSV file: (Generated by Jls)");
                    System.out.println("    Exemple : C:\\Users\\leade\\Desktop\\IFT3913-TP1\\code source\\jls_result.csv");

                    String pathIcsec = scan.nextLine();
                    try{
                        JavaFiles javaFiles = new JavaFiles(0);
                        javaFiles.readFromCsv(pathIcsec);
                        javaFiles.Icsec();
                        javaFiles.writeDataToCsv("Icsec_result.csv", true);

                    }
                    catch (Exception e){
                        System.out.println("Path : {" + pathIcsec + "} is incorrect.");
                        //e.printStackTrace();
                    }
                    break;


                case "E":
                case "e":
                case "egon":
                case "Egon":
                    System.out.println("Egon starting ...\n");
                    System.out.println("Entrez un chemin valide du dossier souhaité:");
                    System.out.println("Enter a valid path to the desired folder:");
                    System.out.println("    Exemple: C:\\Users\\leade\\Desktop\\IFT3913-TP1\\ckjm-master\\src");

                    String pathEgon = scan.nextLine();
                    try{
                        JavaFiles javaFiles = new JavaFiles(0);
                        System.out.println("Using Jls on : " + pathEgon);
                        javaFiles.jls(pathEgon);
                        System.out.println("Using Icsec & Nvloc on : " + pathEgon + "\n");
                        javaFiles.Icsec();
                        javaFiles.nvloc();
                        File csvFile = javaFiles.writeDataToCsv("jls_nvloc_result.csv", true);

                        System.out.println("\nMerci d'écrire dans la console un seuil entre 0 et 100. Exemple : 35");
                        System.out.println("Please write in the console a threshold between 0 and 100.");

                        Scanner sc = new Scanner(System.in);
                        String treshold;


                        boolean done = false;
                        int treshInt = -1;

                        while(!done){
                            treshold = sc.nextLine();
                            if (isInteger(treshold)) {
                                treshInt = Integer.parseInt(treshold);
                                if (treshInt >= 0 && treshInt <= 100) {
                                    done = true;
                                } else {
                                    System.out.println("Chiffre entre 0 et 100 seulement | Write number between 0 and 100 only.");
                                }
                            }
                            else{
                                System.out.println("Écrire seulement le chiffre et rien d'autre | Write only the number and nothing else.");
                            }

                        }

                        System.out.println("Using Egon on : " +  csvFile.getAbsolutePath() +" avec un seuil de " + Double.valueOf(treshInt)/100);
                        JavaFiles egonFiles = new JavaFiles(0);
                        egonFiles.setList(javaFiles.egon(Double.valueOf(treshInt)/100));

                        System.out.println("\nEgon output:");
                        egonFiles.writeDataToCsv("egon_result.csv", true);

                    }
                    catch (Exception e){
                        System.out.println("Path : {" + pathEgon + "} is incorrect.");
                        //e.printStackTrace();
                    }

                    break;

                default:
                    if (!options.equals("q")){
                        System.out.println("Your option is not valid. Please choose from menu. Write letter only.");}
            }
        } while (!(options.equals("Q") || (options.equals("q")))); // quitting the program
        System.out.println("Good bye :)");
        scan.close();

    }

    // Try to cast if its doesn't work its means its not a int
    public static boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
        } catch(NumberFormatException e) {
            return false;
        } catch(NullPointerException e) {
            return false;
        }

        return true;
    }

    static void printMenu(){
        System.out.println("\n----------------------------------------------------------------------------------");
        System.out.println("Choisir parmi les options suivantes en inscrivant dans la console la lettre associée");
        System.out.println("Choose from the following options by typing the associated letter in the console\n");
        System.out.println("j) Jls");
        System.out.println("n) Nvloc");
        System.out.println("i) Icsec");
        System.out.println("e) Egon");
        System.out.println("q) Quitter | Quit");
    }
}